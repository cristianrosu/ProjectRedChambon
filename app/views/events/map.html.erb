<style>
 #map-ui {
    position:absolute;
    top:100px;left:10px;
    z-index:4000;
    }
    #map-ui ul {
      list-style:none;
      margin:0;padding:0;
      }
      #map-ui a {
        font-size:13px;
        background:#FFF;
        color:#3C4E5A;
        display:block;
        margin:0;padding:0;
        border:1px solid #BBB;
        border-bottom-width:0;
        min-width:138px;
        padding:10px;
        text-decoration:none;
        }
      #map-ui a:hover { background:#ECF5FA; }
      #map-ui li:last-child a {
        border-bottom-width:1px;
        -webkit-border-radius:0 0 3px 3px;
                border-radius:0 0 3px 3px;
        }
      #map-ui li:first-child a {
        -webkit-border-radius:3px 3px 0 0;
                border-radius:3px 3px 0 0;
        }
      #map-ui a.active {
        background:#3887BE;
        border-color:#3887BE;
        color:#FFF;
        }

      #geolocate {
        background:#fff;
        position:absolute;
        top:200px;
        width:158px;
        margin-left:10px;
        z-index:1000;
        font:13px/18px;
        text-align:center;
        padding:10px 0;
        background:#FFF;
        color:#3C4E5A;
        display:block;
        border:1px solid #BBB;
        -webkit-border-radius:3px;
                border-radius:3px;
        }
      #geolocate:hover { background:#ECF5FA; }
</style>

<div id="branding"></div>
    <div id="content"><div class="limiter">
        <div id="about">
          <img style='float:left;' src='img/logo_retina.png' width='49' height'39' />
          <h1 class='map-title'>Discover events</h1>
          <p class='description'>Choose category</p>
          <div id="markerfilters" class="clearfix-map sectionn">
            <div class="markerfilter selected" id="null">All</div>
            <div class="markerfilter" id="null">All</div>
            <div class="markerfilter" id="null">All</div>
            <div class="markerfilter" id="null">All</div>
            <div class="markerfilter" id="null">All</div>
            <div class="markerfilter" id="null">All</div>
            <div class="markerfilter" id="null">All</div>
            <div class="markerfilter" id="null">All</div>
          </div>
        </div>
        <div data-control='geocode' class="clearfix-map sectionn" id="search">
          <form class="geocode">
            <input placeholder='Search for an address' type="text" id="searchTextField">
            <div id='geocode-error'></div>
          </form>
        </div>
    </div></div>
    <div id='map-ui'>
      <ul>
        <li><a href='#' id='filter-food'>show only awesome events</a></li>
        <li><a href='#' class='active' id='filter-all'>show all events</a></li>
      </ul>
    </div>
    <div id="map" class="map"></div>
    <a class="btn btn-orange" style="position:absolute;top:15px;left:15px;" id="prevBtn">Close</a>
    <a href='#' id='geolocate'>Find me</a>
    <div id="prev" data-extended="false" style="overflow:auto;position:absolute;top:0;left:100%;width:90%;bottom:0px;padding-top:30px;background-color: rgba(250,250,250,0.8);">
    </div>
    <div id="map_canvas" style="display:none">

    <script>

      //Gettng the current location
      var geolocate = document.getElementById('geolocate');

      // This uses the HTML5 geolocation API, which is available on
      // most mobile browsers and modern browsers, but not in Internet Explorer
      //
      // See this chart of compatibility for details:
      // http://caniuse.com/#feat=geolocation
      if (!navigator.geolocation) {
          geolocate.innerHTML = 'geolocation is not available';
      } else {
          geolocate.onclick = function(e) {
              e.preventDefault();
              e.stopPropagation();
              navigator.geolocation.getCurrentPosition(
              function(position) {
                  // Once we've got a position, zoom and center the map
                  // on it, add ad a single feature
                  map.ease.location({ lat: position.coords.latitude, lon: position.coords.longitude }).zoom(14).optimal();
                  // And hide the geolocation button
                  geolocate.parentNode.removeChild(geolocate);
              },
              function(err) {
                  // If the user chooses not to allow their location
                  // to be shared, display an error message.
                  geolocate.innerHTML = 'position could not be found';
              });
          };
      }

      //Bringing the events as jsons
      var features = <%= events_as_json(@events)%>;

      //creating the mapbox map
      var map = mapbox.map('map');
      map.addLayer(mapbox.layer().id('examples.map-yr0njcqy'));

      //creating the fake google maps
      var mapOptions = {
          center: new google.maps.LatLng(-33.8688, 151.2195),
          zoom: 13,
          mapTypeId: google.maps.MapTypeId.ROADMAP
        };
      var map2 = new google.maps.Map(document.getElementById('map_canvas'),
        mapOptions);

      var input = document.getElementById('searchTextField');
      var autocomplete = new google.maps.places.Autocomplete(input);

      autocomplete.bindTo('bounds', map2);

      var infowindow = new google.maps.InfoWindow();
      var marker = new google.maps.Marker({
        map: map2
      });

      google.maps.event.addListener(autocomplete, 'place_changed', function() {
          infowindow.close();
          marker.setVisible(false);
          input.className = '';
          var place = autocomplete.getPlace();
          if (!place.geometry) {
            // Inform the user that the place was not found and return.
            $('#geocode-error').text('This address cannot be found.').fadeIn('fast');
            return;
          }

          // If the place has a geometry, then present it on a map.
          if (place.geometry.viewport) {
            map.ease.location({ lat: place.geometry.location.Xa, lon: place.geometry.location.Ya }).zoom(14).optimal();
          } else {
            map.ease.location({ lat: place.geometry.location.Xa, lon: place.geometry.location.Ya }).zoom(14).optimal();
          }

        });

      // Create and add marker layer
      var markerLayer = mapbox.markers.layer().features(features);
      var interaction = mapbox.markers.interaction(markerLayer);
      markerLayer.factory(function(m) {

        // Create a marker using the simplestyle factory
        var elem = mapbox.markers.simplestyle_factory(m);

        // Add function that centers marker on click
        MM.addEvent(elem, 'click', function(e) {
            map.ease.location({
              lat: m.geometry.coordinates[1],
              lon: m.geometry.coordinates[0]
            }).zoom(map.zoom()).optimal();
        });

        var food = document.getElementById('filter-food');
        var all = document.getElementById('filter-all');

        food.onclick = function(e) {
            all.className = '';
            this.className = 'active';
            // The filter function takes a GeoJSON feature object
            // and returns true to show it or false to hide it.
            markerLayer.filter(function(f) {
                return f.properties['title'] === 'loho';
            });
            return false;
        };

        all.onclick = function() {
            food.className = '';
            this.className = 'active';
            markerLayer.filter(function(f) {
                // Returning true for all markers shows everything.
                return true;
            });
            return false;
        };


        return elem;
      });
      map.addLayer(markerLayer);

      // Set a custom formatter for tooltips
      // Provide a function that returns html to be used in tooltip
      interaction.formatter(function(feature) {
          var o = '<a target="_blank" href="' + feature.properties.description + '">' +
              '<img src="' + feature.properties.image + '">' +
              '<h2>' + feature.properties.industry + '</h2>' +
              '<a onclick="GetEventOnClick('+feature.properties.id+')" class="btn btn-orange" style="position:absolute;bottom:15px;right:15px;" id="prevBtn">Preview</a>'+
              '</a>';

          return o;
      });

      map.zoom(5).center({ lat: 46, lon: -79 });

    </script>
